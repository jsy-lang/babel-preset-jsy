'use strict';

const bps_env = require('babel-preset-env').default;
const bps_stage_3 = require('babel-preset-stage-3');
const bpi_dyn_import = require('babel-plugin-syntax-dynamic-import');
const bpi_class_props = require('babel-plugin-transform-class-properties');

const bpi_offside_js = require('babel-plugin-offside-js').default;
const bpi_jsy_lite = require('babel-plugin-jsy-lite').default;

preset.preset = preset.default = preset;
module.exports = exports = preset;

function preset(context, opts = {}) {
  const opts_stage_3 = 'stage_3' in opts ? opts.stage_3 : !opts.no_stage_3;
  delete opts.stage_3;delete opts.no_stage_3;
  const opts_offside = opts.offside;
  delete opts.offside;

  if (!opts.targets) {
    opts.targets = { node: 'current' };
  }

  if (true === opts.targets.browser) {
    opts.targets.browser = 'last 1 versions, > 2% in US';
  }

  let presets = [],
      plugins = [];

  presets.push([bps_env, opts]);
  if (opts_stage_3) {
    presets.push([bps_stage_3]);
  }

  plugins.push([bpi_class_props]);
  plugins.push([bpi_dyn_import]);

  if (opts.jsy_lite) {
    plugins.push([bpi_jsy_lite]);
  } else {
    plugins.push([bpi_offside_js, opts_offside]);
  }

  return { presets, plugins };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NvZGUvaW5kZXguanMiXSwibmFtZXMiOlsiYnBzX2VudiIsInJlcXVpcmUiLCJkZWZhdWx0IiwiYnBzX3N0YWdlXzMiLCJicGlfZHluX2ltcG9ydCIsImJwaV9jbGFzc19wcm9wcyIsImJwaV9vZmZzaWRlX2pzIiwiYnBpX2pzeV9saXRlIiwicHJlc2V0IiwibW9kdWxlIiwiZXhwb3J0cyIsImNvbnRleHQiLCJvcHRzIiwib3B0c19zdGFnZV8zIiwic3RhZ2VfMyIsIm5vX3N0YWdlXzMiLCJvcHRzX29mZnNpZGUiLCJvZmZzaWRlIiwidGFyZ2V0cyIsIm5vZGUiLCJicm93c2VyIiwicHJlc2V0cyIsInBsdWdpbnMiLCJwdXNoIiwianN5X2xpdGUiXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTUEsVUFBVUMsUUFBUSxrQkFBUixFQUE0QkMsT0FBNUM7QUFDQSxNQUFNQyxjQUFjRixRQUFRLHNCQUFSLENBQXBCO0FBQ0EsTUFBTUcsaUJBQWlCSCxRQUFRLG9DQUFSLENBQXZCO0FBQ0EsTUFBTUksa0JBQWtCSixRQUFRLHlDQUFSLENBQXhCOztBQUVBLE1BQU1LLGlCQUFpQkwsUUFBUSx5QkFBUixFQUFtQ0MsT0FBMUQ7QUFDQSxNQUFNSyxlQUFlTixRQUFRLHVCQUFSLEVBQWlDQyxPQUF0RDs7QUFFQU0sT0FBT0EsTUFBUCxHQUFnQkEsT0FBT04sT0FBUCxHQUFpQk0sTUFBakM7QUFDQUMsT0FBT0MsT0FBUCxHQUFpQkEsVUFBVUYsTUFBM0I7O0FBRUEsU0FBU0EsTUFBVCxDQUFnQkcsT0FBaEIsRUFBeUJDLE9BQUssRUFBOUIsRUFBa0M7QUFDaEMsUUFBTUMsZUFBZSxhQUFhRCxJQUFiLEdBQW9CQSxLQUFLRSxPQUF6QixHQUFtQyxDQUFDRixLQUFLRyxVQUE5RDtBQUNBLFNBQU9ILEtBQUtFLE9BQVosQ0FBcUIsT0FBT0YsS0FBS0csVUFBWjtBQUNyQixRQUFNQyxlQUFlSixLQUFLSyxPQUExQjtBQUNBLFNBQU9MLEtBQUtLLE9BQVo7O0FBRUEsTUFBRyxDQUFDTCxLQUFLTSxPQUFULEVBQW1CO0FBQ2pCTixTQUFLTSxPQUFMLEdBQWUsRUFBSUMsTUFBTSxTQUFWLEVBQWY7QUFBa0M7O0FBRXBDLE1BQUcsU0FBU1AsS0FBS00sT0FBTCxDQUFhRSxPQUF6QixFQUFtQztBQUNqQ1IsU0FBS00sT0FBTCxDQUFhRSxPQUFiLEdBQXVCLDZCQUF2QjtBQUFvRDs7QUFFdEQsTUFBSUMsVUFBVSxFQUFkO0FBQUEsTUFBa0JDLFVBQVUsRUFBNUI7O0FBRUFELFVBQVFFLElBQVIsQ0FBZSxDQUFDdkIsT0FBRCxFQUFVWSxJQUFWLENBQWY7QUFDQSxNQUFHQyxZQUFILEVBQWtCO0FBQ2hCUSxZQUFRRSxJQUFSLENBQWUsQ0FBQ3BCLFdBQUQsQ0FBZjtBQUEyQjs7QUFFN0JtQixVQUFRQyxJQUFSLENBQWUsQ0FBQ2xCLGVBQUQsQ0FBZjtBQUNBaUIsVUFBUUMsSUFBUixDQUFlLENBQUNuQixjQUFELENBQWY7O0FBRUEsTUFBR1EsS0FBS1ksUUFBUixFQUFtQjtBQUNqQkYsWUFBUUMsSUFBUixDQUFlLENBQUNoQixZQUFELENBQWY7QUFBNEIsR0FEOUIsTUFFSztBQUNIZSxZQUFRQyxJQUFSLENBQWUsQ0FBQ2pCLGNBQUQsRUFBaUJVLFlBQWpCLENBQWY7QUFBNEM7O0FBRTlDLFNBQU8sRUFBSUssT0FBSixFQUFhQyxPQUFiLEVBQVA7QUFBMkIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBicHNfZW52ID0gcmVxdWlyZSgnYmFiZWwtcHJlc2V0LWVudicpLmRlZmF1bHRcbmNvbnN0IGJwc19zdGFnZV8zID0gcmVxdWlyZSgnYmFiZWwtcHJlc2V0LXN0YWdlLTMnKVxuY29uc3QgYnBpX2R5bl9pbXBvcnQgPSByZXF1aXJlKCdiYWJlbC1wbHVnaW4tc3ludGF4LWR5bmFtaWMtaW1wb3J0JylcbmNvbnN0IGJwaV9jbGFzc19wcm9wcyA9IHJlcXVpcmUoJ2JhYmVsLXBsdWdpbi10cmFuc2Zvcm0tY2xhc3MtcHJvcGVydGllcycpXG5cbmNvbnN0IGJwaV9vZmZzaWRlX2pzID0gcmVxdWlyZSgnYmFiZWwtcGx1Z2luLW9mZnNpZGUtanMnKS5kZWZhdWx0XG5jb25zdCBicGlfanN5X2xpdGUgPSByZXF1aXJlKCdiYWJlbC1wbHVnaW4tanN5LWxpdGUnKS5kZWZhdWx0XG5cbnByZXNldC5wcmVzZXQgPSBwcmVzZXQuZGVmYXVsdCA9IHByZXNldFxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzID0gcHJlc2V0XG5cbmZ1bmN0aW9uIHByZXNldChjb250ZXh0LCBvcHRzPXt9KSA6OlxuICBjb25zdCBvcHRzX3N0YWdlXzMgPSAnc3RhZ2VfMycgaW4gb3B0cyA/IG9wdHMuc3RhZ2VfMyA6ICFvcHRzLm5vX3N0YWdlXzNcbiAgZGVsZXRlIG9wdHMuc3RhZ2VfMzsgZGVsZXRlIG9wdHMubm9fc3RhZ2VfMzsgXG4gIGNvbnN0IG9wdHNfb2Zmc2lkZSA9IG9wdHMub2Zmc2lkZVxuICBkZWxldGUgb3B0cy5vZmZzaWRlXG5cbiAgaWYgIW9wdHMudGFyZ2V0cyA6OlxuICAgIG9wdHMudGFyZ2V0cyA9IEB7fSBub2RlOiAnY3VycmVudCdcblxuICBpZiB0cnVlID09PSBvcHRzLnRhcmdldHMuYnJvd3NlciA6OlxuICAgIG9wdHMudGFyZ2V0cy5icm93c2VyID0gJ2xhc3QgMSB2ZXJzaW9ucywgPiAyJSBpbiBVUydcblxuICBsZXQgcHJlc2V0cyA9IFtdLCBwbHVnaW5zID0gW11cblxuICBwcmVzZXRzLnB1c2ggQCMgYnBzX2Vudiwgb3B0c1xuICBpZiBvcHRzX3N0YWdlXzMgOjpcbiAgICBwcmVzZXRzLnB1c2ggQCMgYnBzX3N0YWdlXzNcblxuICBwbHVnaW5zLnB1c2ggQCMgYnBpX2NsYXNzX3Byb3BzXG4gIHBsdWdpbnMucHVzaCBAIyBicGlfZHluX2ltcG9ydFxuXG4gIGlmIG9wdHMuanN5X2xpdGUgOjpcbiAgICBwbHVnaW5zLnB1c2ggQCMgYnBpX2pzeV9saXRlXG4gIGVsc2UgOjpcbiAgICBwbHVnaW5zLnB1c2ggQCMgYnBpX29mZnNpZGVfanMsIG9wdHNfb2Zmc2lkZVxuXG4gIHJldHVybiBAe30gcHJlc2V0cywgcGx1Z2luc1xuXG4iXX0=